name: Testbench autoverificable
run-name: ${{ github.actor }} está corriendo un testbench
on: [push]
jobs: 
  Deteccion_de_cambios:
    runs-on: ubuntu-latest
    outputs:
      ejercicio1: ${{ steps.filter.outputs.ejercicio1 }}
      ejercicio2: ${{ steps.filter.outputs.ejercicio2 }}
      ejercicio3: ${{ steps.filter.outputs.ejercicio3 }}
      ejercicio4: ${{ steps.filter.outputs.ejercicio4 }}
      ejercicio5: ${{ steps.filter.outputs.ejercicio5 }} 
      ejercicio6: ${{ steps.filter.outputs.ejercicio6 }} 

    steps:
    - name: checking out repository code
      uses: actions/checkout@v4
    - name: checking for changes
      uses: dorny/paths-filter@v3
      id: filter
      with:
        filters: |
          ejercicio1:
            - 'ejercicio1/**/*.sv'
          ejercicio2:
            - 'ejercicio2/**/*.sv'
          ejercicio3:
            - 'ejercicio3/**/*.sv'
          ejercicio4:
            - 'ejercicio4/**/*.sv'
          ejercicio5:
            - 'ejercicio5/**/*.sv'
          ejercicio6:
            - 'ejercicio6/**/*.sv'

  ejercicio1:
    needs: Deteccion_de_cambios
    if: ${{ needs.Deteccion_de_cambios.outputs.ejercicio1 == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./ejercicio1/testing
    steps:
      - name: Descargando código del repositorio
        uses: actions/checkout@v4
      - name: Instalando iverilog
        run: sudo apt-get install iverilog
      - name: Configurando Python 3.10
        uses: actions/setup-python@v5
        with: 
          python-version: '3.10'
      - name: Instalando dependencias
        run: pip install cocotb
      - run: make
      - name: Buscando errores
        uses: jannekem/run-python-script-action@v1.7
        with:
          script: |
            import xml.etree.ElementTree as ET
            import sys
            try:
              tree = ET.parse("ejercicio1/testing/results.xml")
              root = tree.getroot()
              if "Test failed" in ET.tostring(root).decode():
                print(f"Se encontraron errores durante la ejecución del testbench.")
                sys.exit(1)
              else:
                print(f"Ejecución del testbench exitosa.")
                sys.exit(0)
            except Exception as e:
              print("Ocurrió un error:", e)
              sys.exit(1)

  regfile:
    needs: Deteccion_de_cambios
    if: ${{ needs.Deteccion_de_cambios.outputs.antirebotes_sinc == 'regfile' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Banco_de_Registros
    steps:
      - name: Descargando código del repositorio
        uses: actions/checkout@v4
      - name: Instalando iverilog
        run: sudo apt-get install iverilog
      - name: Configurando Python 3.10
        uses: actions/setup-python@v5
        with: 
          python-version: '3.10'
      - name: Instalando dependencias
        run: pip install cocotb
      - run: make
      - name: Buscando errores
        uses: jannekem/run-python-script-action@v1.7
        with:
          script: |
            import xml.etree.ElementTree as ET
            import sys
            try:
              tree = ET.parse("Banco_de_Registros/results.xml")
              root = tree.getroot()
              if "Test failed" in ET.tostring(root).decode():
                print(f"Se encontraron errores durante la ejecución del testbench.")
                sys.exit(1)
              else:
                print(f"Ejecución del testbench exitosa.")
                sys.exit(0)
            except Exception as e:
              print("Ocurrió un error:", e)
              sys.exit(1)

  deco_7s:
    needs: Deteccion_de_cambios
    if: ${{ needs.Deteccion_de_cambios.outputs.deco_hex_7s == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Decodificador_Hex_7_Segmentos
    steps:
      - name: Descargando código del repositorio
        uses: actions/checkout@v4
      - name: Instalando iverilog
        run: sudo apt-get install iverilog
      - name: Configurando Python 3.10
        uses: actions/setup-python@v5
        with: 
          python-version: '3.10'
      - name: Instalando dependencias
        run: pip install cocotb
      - run: make
      - name: Buscando errores
        uses: jannekem/run-python-script-action@v1.7
        with:
          script: |
            import xml.etree.ElementTree as ET
            import sys
            try:
              tree = ET.parse("Decodificador_Hex_7_Segmentos/results.xml")
              root = tree.getroot()
              if "Test failed" in ET.tostring(root).decode():
                print(f"Se encontraron errores durante la ejecución del testbench.")
                sys.exit(1)
              else:
                print(f"Ejecución del testbench exitosa.")
                sys.exit(0)
            except Exception as e:
              print("Ocurrió un error:", e)
              sys.exit(1)

  teclado_hex:
    needs: Deteccion_de_cambios
    if: ${{ needs.Deteccion_de_cambios.outputs.teclado_hex == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Interfaz_Teclado_Hex
    steps:
      - name: Descargando código del repositorio
        uses: actions/checkout@v4
      - name: Instalando iverilog
        run: sudo apt-get install iverilog
      - name: Configurando Python 3.10
        uses: actions/setup-python@v5
        with: 
          python-version: '3.10'
      - name: Instalando dependencias
        run: pip install cocotb
      - run: make
      - name: Buscando errores
        uses: jannekem/run-python-script-action@v1.7
        with:
          script: |
            import xml.etree.ElementTree as ET
            import sys
            try:
              tree = ET.parse("Interfaz_Teclado_Hex/results.xml")
              root = tree.getroot()
              if "Test failed" in ET.tostring(root).decode():
                print(f"Se encontraron errores durante la ejecución del testbench.")
                sys.exit(1)
              else:
                print(f"Ejecución del testbench exitosa.")
                sys.exit(0)
            except Exception as e:
              print("Ocurrió un error:", e)
              sys.exit(1)

  pll:
    needs: Deteccion_de_cambios
    if: ${{ needs.Deteccion_de_cambios.outputs.pll == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./PLL_IP_core
    steps:
      - name: Descargando código del repositorio
        uses: actions/checkout@v4
      - name: Instalando iverilog
        run: sudo apt-get install iverilog
      - name: Configurando Python 3.10
        uses: actions/setup-python@v5
        with: 
          python-version: '3.10'
      - name: Instalando dependencias
        run: pip install cocotb
      - run: make
      - name: Buscando errores
        uses: jannekem/run-python-script-action@v1.7
        with:
          script: |
            import xml.etree.ElementTree as ET
            import sys
            try:
              tree = ET.parse("PLL_IP_core/results.xml")
              root = tree.getroot()
              if "Test failed" in ET.tostring(root).decode():
                print(f"Se encontraron errores durante la ejecución del testbench.")
                sys.exit(1)
              else:
                print(f"Ejecución del testbench exitosa.")
                sys.exit(0)
            except Exception as e:
              print("Ocurrió un error:", e)
              sys.exit(1)

  pc:
    needs: Deteccion_de_cambios
    if: ${{ needs.Deteccion_de_cambios.outputs.pc == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Program_Counter
    steps:
      - name: Descargando código del repositorio
        uses: actions/checkout@v4
      - name: Instalando iverilog
        run: sudo apt-get install iverilog
      - name: Configurando Python 3.10
        uses: actions/setup-python@v5
        with: 
          python-version: '3.10'
      - name: Instalando dependencias
        run: pip install cocotb
      - run: make
      - name: Buscando errores
        uses: jannekem/run-python-script-action@v1.7
        with:
          script: |
            import xml.etree.ElementTree as ET
            import sys
            try:
              tree = ET.parse("Program_Counter/results.xml")
              root = tree.getroot()
              if "Test failed" in ET.tostring(root).decode():
                print(f"Se encontraron errores durante la ejecución del testbench.")
                sys.exit(1)
              else:
                print(f"Ejecución del testbench exitosa.")
                sys.exit(0)
            except Exception as e:
              print("Ocurrió un error:", e)
              sys.exit(1)

  unidad_calculo:
    needs: Deteccion_de_cambios
    if: ${{ needs.Deteccion_de_cambios.outputs.unidad_calculo == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Unidad_de_Calculo
    steps:
      - name: Descargando código del repositorio
        uses: actions/checkout@v4
      - name: Instalando iverilog
        run: sudo apt-get install iverilog
      - name: Configurando Python 3.10
        uses: actions/setup-python@v5
        with: 
          python-version: '3.10'
      - name: Instalando dependencias
        run: pip install cocotb
      - run: make
      - name: Buscando errores
        uses: jannekem/run-python-script-action@v1.7
        with:
          script: |
            import xml.etree.ElementTree as ET
            import sys
            try:
              tree = ET.parse("Unidad_de_Calculo/results.xml")
              root = tree.getroot()
              if "Test failed" in ET.tostring(root).decode():
                print(f"Se encontraron errores durante la ejecución del testbench.")
                sys.exit(1)
              else:
                print(f"Ejecución del testbench exitosa.")
                sys.exit(0)
            except Exception as e:
              print("Ocurrió un error:", e)
              sys.exit(1)
