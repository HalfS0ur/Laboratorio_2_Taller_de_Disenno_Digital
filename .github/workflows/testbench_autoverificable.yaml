name: Testbench autoverificable
run-name: ${{ github.actor }} está corriendo un testbench
on: [push]
jobs: 
  Deteccion_de_cambios:
    runs-on: ubuntu-latest
    outputs:
      antirebotes_sinc: ${{ steps.filter.outputs.antirebotes_sinc }}
      regfile: ${{ steps.filter.outputs.regfile }}
      deco_hex_7s: ${{ steps.filter.outputs.deco_hex_7s }}
      teclado_hex : ${{ steps.filter.outputs.teclado_hex }}
      pll : ${{ steps.filter.outputs.pll }} 
      pc : ${{ steps.filter.outputs.pc }} 
      unidad_calculo : ${{ steps.filter.outputs.unidad_calculo }} 
    steps:
    - name: checking out repository code
      uses: actions/checkout@v4
    - name: checking for changes
      uses: dorny/paths-filter@v3
      id: filter
      with:
        filters: |
          antirebotes_sinc:
            - 'Antirebotes_Sincronizador/**/*.sv'
          regfile:
            - 'Banco_de_Registros/**/*.sv'
          deco_hex_7s:
            - 'Decodificador_Hex_7_Segmentos/**/*.sv'
          teclado_hex:
            - 'Interfaz_Teclado_Hex/**/*.sv'
          pll:
            - 'PLL_IP_core/**/*.sv'
          pc:
            - 'Program_Counter/**/*.sv'
          unidad_calculo:
            - 'Unidad_de_Calculo/**/*.sv'

  antirebotes_sinc:
    needs: Deteccion_de_cambios
    if: ${{ needs.Deteccion_de_cambios.outputs.antirebotes_sinc == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Antirebotes_Sincronizador
    steps:
      - name: Descargando código del repositorio
        uses: actions/checkout@v4
      - name: Instalando iverilog
        run: sudo apt-get install iverilog
      - name: Configurando Python 3.10
        uses: actions/setup-python@v5
        with: 
          python-version: '3.10'
      - name: Instalando dependencias
        run: pip install cocotb
      - run: make
      - name: Buscando errores
        uses: jannekem/run-python-script-action@v1.7
        with:
          script: |
            import xml.etree.ElementTree as ET
            import sys
            try:
              tree = ET.parse("Antirebotes_Sincronizador/results.xml")
              root = tree.getroot()
              if "Test failed" in ET.tostring(root).decode():
                print(f"Se encontraron errores durante la ejecución del testbench.")
                sys.exit(1)
              else:
                print(f"Ejecución del testbench exitosa.")
                sys.exit(0)
            except Exception as e:
              print("Ocurrió un error:", e)
              sys.exit(1)

  regfile:
    needs: Deteccion_de_cambios
    if: ${{ needs.Deteccion_de_cambios.outputs.antirebotes_sinc == 'regfile' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Banco_de_Registros
    steps:
      - name: Descargando código del repositorio
        uses: actions/checkout@v4
      - name: Instalando iverilog
        run: sudo apt-get install iverilog
      - name: Configurando Python 3.10
        uses: actions/setup-python@v5
        with: 
          python-version: '3.10'
      - name: Instalando dependencias
        run: pip install cocotb
      - run: make

  deco_7s:
    needs: Deteccion_de_cambios
    if: ${{ needs.Deteccion_de_cambios.outputs.deco_hex_7s == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Decodificador_Hex_7_Segmentos
    steps:
      - name: Descargando código del repositorio
        uses: actions/checkout@v4
      - name: Instalando iverilog
        run: sudo apt-get install iverilog
      - name: Configurando Python 3.10
        uses: actions/setup-python@v5
        with: 
          python-version: '3.10'
      - name: Instalando dependencias
        run: pip install cocotb
      - run: make

  teclado_hex:
    needs: Deteccion_de_cambios
    if: ${{ needs.Deteccion_de_cambios.outputs.teclado_hex == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Interfaz_Teclado_Hex
    steps:
      - name: Descargando código del repositorio
        uses: actions/checkout@v4
      - name: Instalando iverilog
        run: sudo apt-get install iverilog
      - name: Configurando Python 3.10
        uses: actions/setup-python@v5
        with: 
          python-version: '3.10'
      - name: Instalando dependencias
        run: pip install cocotb
      - run: make

  pll:
    needs: Deteccion_de_cambios
    if: ${{ needs.Deteccion_de_cambios.outputs.pll == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./PLL_IP_core
    steps:
      - name: Descargando código del repositorio
        uses: actions/checkout@v4
      - name: Instalando iverilog
        run: sudo apt-get install iverilog
      - name: Configurando Python 3.10
        uses: actions/setup-python@v5
        with: 
          python-version: '3.10'
      - name: Instalando dependencias
        run: pip install cocotb
      - run: make

  pc:
    needs: Deteccion_de_cambios
    if: ${{ needs.Deteccion_de_cambios.outputs.pc == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Program_Counter
    steps:
      - name: Descargando código del repositorio
        uses: actions/checkout@v4
      - name: Instalando iverilog
        run: sudo apt-get install iverilog
      - name: Configurando Python 3.10
        uses: actions/setup-python@v5
        with: 
          python-version: '3.10'
      - name: Instalando dependencias
        run: pip install cocotb
      - run: make

  unidad_calculo:
    needs: Deteccion_de_cambios
    if: ${{ needs.Deteccion_de_cambios.outputs.unidad_calculo == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Unidad_de_Calculo
    steps:
      - name: Descargando código del repositorio
        uses: actions/checkout@v4
      - name: Instalando iverilog
        run: sudo apt-get install iverilog
      - name: Configurando Python 3.10
        uses: actions/setup-python@v5
        with: 
          python-version: '3.10'
      - name: Instalando dependencias
        run: pip install cocotb
      - run: make
