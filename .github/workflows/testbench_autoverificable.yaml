name: Testbench autoverificable
run-name: ${{ github.actor }} está corriendo un testbench
on: [push]
jobs: 
  Deteccion_de_cambios:
    runs-on: ubuntu-latest
    outputs:
      ejercicio1: ${{ steps.filter.outputs.ejercicio1 }}
      ejercicio2: ${{ steps.filter.outputs.ejercicio2 }}
      ejercicio3: ${{ steps.filter.outputs.ejercicio3 }}
      ejercicio4: ${{ steps.filter.outputs.ejercicio4 }}
      ejercicio5: ${{ steps.filter.outputs.ejercicio5 }} 
      ejercicio6: ${{ steps.filter.outputs.ejercicio6 }} 

    steps:
    - name: checking out repository code
      uses: actions/checkout@v4
    - name: checking for changes
      uses: dorny/paths-filter@v3
      id: filter
      with:
        filters: |
          ejercicio1:
            - 'ejercicio1/**/*.sv'
          ejercicio2:
            - 'ejercicio2/**/*.sv'
          ejercicio3:
            - 'ejercicio3/**/*.sv'
          ejercicio4:
            - 'ejercicio4/**/*.sv'
          ejercicio5:
            - 'ejercicio5/**/*.sv'
          ejercicio6:
            - 'ejercicio6/**/*.sv'

  testbench_ejercicio1:
    needs: Deteccion_de_cambios
    if: ${{ needs.Deteccion_de_cambios.outputs.ejercicio1 == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./ejercicio1/testing
    steps:
      - name: Descargando código del repositorio
        uses: actions/checkout@v4
      - name: Instalando iverilog
        run: sudo apt-get install iverilog
      - name: Configurando Python 3.10
        uses: actions/setup-python@v5
        with: 
          python-version: '3.10'
      - name: Instalando dependencias
        run: pip install cocotb
      - run: make
      - name: Buscando errores
        uses: jannekem/run-python-script-action@v1.7
        with:
          script: |
            import xml.etree.ElementTree as ET
            import sys
            try:
              tree = ET.parse("ejercicio1/testing/results.xml")
              root = tree.getroot()
              if "Test failed" in ET.tostring(root).decode():
                print(f"Se encontraron errores durante la ejecución del testbench.")
                sys.exit(1)
              else:
                print(f"Ejecución del testbench exitosa.")
                sys.exit(0)
            except Exception as e:
              print("Ocurrió un error:", e)
              sys.exit(1)

  sintesis_ejercicio1:
    needs: testbench_ejercicio1
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./ejercicio1/synthesis
    steps:
      - name: Descargando el código del repositorio
        uses: actions/checkout@v4
      - name: Sintetizando módulo(s)
        run: bash ../../.github/scripts/synthesis_script.sh -a

  testbench_ejercicio2:
    needs: Deteccion_de_cambios
    if: ${{ needs.Deteccion_de_cambios.outputs.ejercicio2 == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./ejercicio2/testing
    steps:
      - name: Descargando código del repositorio
        uses: actions/checkout@v4
      - name: Instalando iverilog
        run: sudo apt-get install iverilog
      - name: Configurando Python 3.10
        uses: actions/setup-python@v5
        with: 
          python-version: '3.10'
      - name: Instalando dependencias
        run: pip install cocotb
      - run: make
      - name: Buscando errores
        uses: jannekem/run-python-script-action@v1.7
        with:
          script: |
            import xml.etree.ElementTree as ET
            import sys
            try:
              tree = ET.parse("ejercicio2/testing/results.xml")
              root = tree.getroot()
              if "Test failed" in ET.tostring(root).decode():
                print(f"Se encontraron errores durante la ejecución del testbench.")
                sys.exit(1)
              else:
                print(f"Ejecución del testbench exitosa.")
                sys.exit(0)
            except Exception as e:
              print("Ocurrió un error:", e)
              sys.exit(1)
           
  sintesis_ejercicio2:
    needs: testbench_ejercicio2
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./ejercicio2/synthesis
    steps:
      - name: Descargando el código del repositorio
        uses: actions/checkout@v4
      - name: Sintetizando módulo(s)
        run: bash ../../.github/scripts/synthesis_script.sh -a

  testbench_ejercicio3:
    needs: Deteccion_de_cambios
    if: ${{ needs.Deteccion_de_cambios.outputs.ejercicio3 == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./ejercicio3/testing
    steps:
      - name: Descargando código del repositorio
        uses: actions/checkout@v4
      - name: Instalando iverilog
        run: sudo apt-get install iverilog
      - name: Configurando Python 3.10
        uses: actions/setup-python@v5
        with: 
          python-version: '3.10'
      - name: Instalando dependencias
        run: pip install cocotb
      - run: make
      - name: Buscando errores
        uses: jannekem/run-python-script-action@v1.7
        with:
          script: |
            import xml.etree.ElementTree as ET
            import sys
            try:
              tree = ET.parse("ejercicio3/testing/results.xml")
              root = tree.getroot()
              if "Test failed" in ET.tostring(root).decode():
                print(f"Se encontraron errores durante la ejecución del testbench.")
                sys.exit(1)
              else:
                print(f"Ejecución del testbench exitosa.")
                sys.exit(0)
            except Exception as e:
              print("Ocurrió un error:", e)
              sys.exit(1)

  sintesis_ejercicio3:
    needs: testbench_ejercicio3
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./ejercicio3/synthesis
    steps:
      - name: Descargando el código del repositorio
        uses: actions/checkout@v4
      - name: Sintetizando módulo(s)
        run: bash ../../.github/scripts/synthesis_script.sh -a

  testbench_ejercicio4:
    needs: Deteccion_de_cambios
    if: ${{ needs.Deteccion_de_cambios.outputs.ejercicio4 == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./ejercicio4/testing
    steps:
      - name: Descargando código del repositorio
        uses: actions/checkout@v4
      - name: Instalando iverilog
        run: sudo apt-get install iverilog
      - name: Configurando Python 3.10
        uses: actions/setup-python@v5
        with: 
          python-version: '3.10'
      - name: Instalando dependencias
        run: pip install cocotb
      - run: make
      - name: Buscando errores
        uses: jannekem/run-python-script-action@v1.7
        with:
          script: |
            import xml.etree.ElementTree as ET
            import sys
            try:
              tree = ET.parse("ejercicio4/testing/results.xml")
              root = tree.getroot()
              if "Test failed" in ET.tostring(root).decode():
                print(f"Se encontraron errores durante la ejecución del testbench.")
                sys.exit(1)
              else:
                print(f"Ejecución del testbench exitosa.")
                sys.exit(0)
            except Exception as e:
              print("Ocurrió un error:", e)
              sys.exit(1)

  sintesis_ejercicio4:
    needs: testbench_ejercicio4
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./ejercicio4/synthesis
    steps:
      - name: Descargando el código del repositorio
        uses: actions/checkout@v4
      - name: Sintetizando módulo(s)
        run: bash ../../.github/scripts/synthesis_script.sh -a

  testbench_ejercicio5:
    needs: Deteccion_de_cambios
    if: ${{ needs.Deteccion_de_cambios.outputs.ejercicio5 == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./ejercicio5/testing
    steps:
      - name: Descargando código del repositorio
        uses: actions/checkout@v4
      - name: Instalando iverilog
        run: sudo apt-get install iverilog
      - name: Configurando Python 3.10
        uses: actions/setup-python@v5
        with: 
          python-version: '3.10'
      - name: Instalando dependencias
        run: pip install cocotb
      - run: make
      - name: Buscando errores
        uses: jannekem/run-python-script-action@v1.7
        with:
          script: |
            import xml.etree.ElementTree as ET
            import sys
            try:
              tree = ET.parse("ejercicio5/testing/results.xml")
              root = tree.getroot()
              if "Test failed" in ET.tostring(root).decode():
                print(f"Se encontraron errores durante la ejecución del testbench.")
                sys.exit(1)
              else:
                print(f"Ejecución del testbench exitosa.")
                sys.exit(0)
            except Exception as e:
              print("Ocurrió un error:", e)
              sys.exit(1)

  sintesis_ejercicio5:
    needs: testbench_ejercicio5
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./ejercicio5/synthesis
    steps:
      - name: Descargando el código del repositorio
        uses: actions/checkout@v4
      - name: Sintetizando módulo(s)
        run: bash ../../.github/scripts/synthesis_script.sh -a

  #testbench_ejercicio6:
    #needs: Deteccion_de_cambios
    #if: ${{ needs.Deteccion_de_cambios.outputs.ejercicio6 == 'true' }}
    #runs-on: ubuntu-latest
    #defaults:
      #run:
        #working-directory: ./ejercicio6/testing
    #steps:
      #- name: Descargando código del repositorio
      #  uses: actions/checkout@v4
      #- name: Instalando iverilog
      #  run: sudo apt-get install iverilog
      #- name: Configurando Python 3.10
      #  uses: actions/setup-python@v5
      #  with: 
      #    python-version: '3.10'
      #- name: Instalando dependencias
      #  run: pip install cocotb
      #- run: make
      #- name: Buscando errores
      #  uses: jannekem/run-python-script-action@v1.7
      #  with:
      #    script: |
      #      import xml.etree.ElementTree as ET
      #      import sys
      #      try:
      #        tree = ET.parse("ejercicio6/testing/results.xml")
      #        root = tree.getroot()
      #        if "Test failed" in ET.tostring(root).decode():
      #          print(f"Se encontraron errores durante la ejecución del testbench.")
      #          sys.exit(1)
      #        else:
      #          print(f"Ejecución del testbench exitosa.")
      #          sys.exit(0)
      #      except Exception as e:
      #        print("Ocurrió un error:", e)
      #        sys.exit(1)

  #sintesis_ejercicio6:
    #needs: testbench_ejercicio6
    #runs-on: ubuntu-latest
    #defaults:
      #run:
        #working-directory: ./ejercicio6/synthesis
    #steps:
      #- name: Descargando el código del repositorio
      #  uses: actions/checkout@v4
      #- name: Sintetizando módulo(s)
      #  run: bash ../../.github/scripts/synthesis_script.sh -a